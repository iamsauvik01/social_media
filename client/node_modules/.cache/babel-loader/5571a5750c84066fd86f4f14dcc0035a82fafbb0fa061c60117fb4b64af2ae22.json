{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91887\\\\Downloads\\\\Mini\\\\MERN-SocialMedia-ZAINKEEPSCODE\\\\client\\\\src\\\\pages\\\\Chat\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport ChatBox from \"../../components/ChatBox/ChatBox\";\nimport Conversation from \"../../components/Coversation/Conversation\";\nimport LogoSearch from \"../../components/LogoSearch/LogoSearch\";\nimport NavIcons from \"../../components/NavIcons/NavIcons\";\nimport \"./Chat.css\";\nimport { useEffect } from \"react\";\nimport { userChats } from \"../../api/ChatRequests\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const dispatch = useDispatch();\n  const socket = useRef();\n  const {\n    user\n  } = useSelector(state => state.authReducer.authData);\n  const [chats, setChats] = useState([]);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [sendMessage, setSendMessage] = useState(null);\n  const [receivedMessage, setReceivedMessage] = useState(null);\n  // Get the chat in chat section\n  useEffect(() => {\n    const getChats = async () => {\n      try {\n        const {\n          data\n        } = await userChats(user._id);\n        setChats(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getChats();\n  }, [user._id]);\n\n  // Connect to Socket.io\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8800\");\n    socket.current.emit(\"new-user-add\", user._id);\n    socket.current.on(\"get-users\", users => {\n      setOnlineUsers(users);\n    });\n  }, [user]);\n\n  // Send Message to socket server\n  useEffect(() => {\n    if (sendMessage !== null) {\n      socket.current.emit(\"send-message\", sendMessage);\n    }\n  }, [sendMessage]);\n\n  // Get the message from socket server\n  useEffect(() => {\n    socket.current.on(\"recieve-message\", data => {\n      console.log(data);\n      setReceivedMessage(data);\n    });\n  }, []);\n  const checkOnlineStatus = chat => {\n    const chatMember = chat.members.find(member => member !== user._id);\n    const online = onlineUsers.find(user => user.userId === chatMember);\n    return online ? true : false;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Left-side-chat\",\n      children: [/*#__PURE__*/_jsxDEV(LogoSearch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Chat-list\",\n          children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setCurrentChat(chat);\n            },\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              data: chat,\n              currentUser: user._id,\n              online: checkOnlineStatus(chat)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Right-side-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"20rem\",\n          alignSelf: \"flex-end\"\n        },\n        children: /*#__PURE__*/_jsxDEV(NavIcons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n        chat: currentChat,\n        currentUser: user._id,\n        setSendMessage: setSendMessage,\n        receivedMessage: receivedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"tcQkYmAsKvFRPt4CbU2/eRdJDDg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useRef","useState","ChatBox","Conversation","LogoSearch","NavIcons","useEffect","userChats","useDispatch","useSelector","io","Chat","dispatch","socket","user","state","authReducer","authData","chats","setChats","onlineUsers","setOnlineUsers","currentChat","setCurrentChat","sendMessage","setSendMessage","receivedMessage","setReceivedMessage","getChats","data","_id","error","console","log","current","emit","on","users","checkOnlineStatus","chat","chatMember","members","find","member","online","userId","map","width","alignSelf"],"sources":["C:/Users/91887/Downloads/Mini/MERN-SocialMedia-ZAINKEEPSCODE/client/src/pages/Chat/Chat.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport ChatBox from \"../../components/ChatBox/ChatBox\";\r\nimport Conversation from \"../../components/Coversation/Conversation\";\r\nimport LogoSearch from \"../../components/LogoSearch/LogoSearch\";\r\nimport NavIcons from \"../../components/NavIcons/NavIcons\";\r\nimport \"./Chat.css\";\r\nimport { useEffect } from \"react\";\r\nimport { userChats } from \"../../api/ChatRequests\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst Chat = () => {\r\n  const dispatch = useDispatch();\r\n  const socket = useRef();\r\n  const { user } = useSelector((state) => state.authReducer.authData);\r\n\r\n  const [chats, setChats] = useState([]);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [sendMessage, setSendMessage] = useState(null);\r\n  const [receivedMessage, setReceivedMessage] = useState(null);\r\n  // Get the chat in chat section\r\n  useEffect(() => {\r\n    const getChats = async () => {\r\n      try {\r\n        const { data } = await userChats(user._id);\r\n        setChats(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getChats();\r\n  }, [user._id]);\r\n\r\n  // Connect to Socket.io\r\n  useEffect(() => {\r\n    socket.current = io(\"ws://localhost:8800\");\r\n    socket.current.emit(\"new-user-add\", user._id);\r\n    socket.current.on(\"get-users\", (users) => {\r\n      setOnlineUsers(users);\r\n    });\r\n  }, [user]);\r\n\r\n  // Send Message to socket server\r\n  useEffect(() => {\r\n    if (sendMessage!==null) {\r\n      socket.current.emit(\"send-message\", sendMessage);}\r\n  }, [sendMessage]);\r\n\r\n\r\n  // Get the message from socket server\r\n  useEffect(() => {\r\n    socket.current.on(\"recieve-message\", (data) => {\r\n      console.log(data)\r\n      setReceivedMessage(data);\r\n    }\r\n\r\n    );\r\n  }, []);\r\n\r\n\r\n  const checkOnlineStatus = (chat) => {\r\n    const chatMember = chat.members.find((member) => member !== user._id);\r\n    const online = onlineUsers.find((user) => user.userId === chatMember);\r\n    return online ? true : false;\r\n  };\r\n\r\n  return (\r\n    <div className=\"Chat\">\r\n      {/* Left Side */}\r\n      <div className=\"Left-side-chat\">\r\n        <LogoSearch />\r\n        <div className=\"Chat-container\">\r\n          <h2>Chats</h2>\r\n          <div className=\"Chat-list\">\r\n            {chats.map((chat) => (\r\n              <div\r\n                onClick={() => {\r\n                  setCurrentChat(chat);\r\n                }}\r\n              >\r\n                <Conversation\r\n                  data={chat}\r\n                  currentUser={user._id}\r\n                  online={checkOnlineStatus(chat)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right Side */}\r\n\r\n      <div className=\"Right-side-chat\">\r\n        <div style={{ width: \"20rem\", alignSelf: \"flex-end\" }}>\r\n          <NavIcons />\r\n        </div>\r\n        <ChatBox\r\n          chat={currentChat}\r\n          currentUser={user._id}\r\n          setSendMessage={setSendMessage}\r\n          receivedMessage={receivedMessage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}