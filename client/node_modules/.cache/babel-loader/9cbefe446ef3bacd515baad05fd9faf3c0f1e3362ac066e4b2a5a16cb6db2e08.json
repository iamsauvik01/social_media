{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91887\\\\Downloads\\\\Mini\\\\MERN-SocialMedia-ZAINKEEPSCODE\\\\client\\\\src\\\\components\\\\Posts\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { getTimelinePosts } from \"../../actions/PostsAction\";\nimport Post from \"../Post/Post\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./Posts.css\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const params = useParams();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.authReducer.authData);\n  let {\n    posts,\n    loading\n  } = useSelector(state => state.postReducer);\n  useEffect(() => {\n    dispatch(getTimelinePosts(user._id));\n  }, []);\n  if (!posts) return 'No Posts';\n  if (params.id) posts = posts.filter(post => post.userId === params.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Posts\",\n    children: loading ? \"Fetching posts....\" : posts.map((post, id) => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        data: post\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"vf648cwUkPLWnA778x29q3yTSg0=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","getTimelinePosts","Post","useSelector","useDispatch","useParams","Posts","params","dispatch","user","state","authReducer","authData","posts","loading","postReducer","_id","id","filter","post","userId","map"],"sources":["C:/Users/91887/Downloads/Mini/MERN-SocialMedia-ZAINKEEPSCODE/client/src/components/Posts/Posts.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { getTimelinePosts } from \"../../actions/PostsAction\";\r\nimport Post from \"../Post/Post\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./Posts.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Posts = () => {\r\n  const params = useParams()\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.authReducer.authData);\r\n  let { posts, loading } = useSelector((state) => state.postReducer);\r\n  useEffect(() => {\r\n    dispatch(getTimelinePosts(user._id));\r\n  }, []);\r\n  if(!posts) return 'No Posts';\r\n  if(params.id) posts = posts.filter((post)=> post.userId===params.id)\r\n  return (\r\n    <div className=\"Posts\">\r\n      {loading\r\n        ? \"Fetching posts....\"\r\n        : posts.map((post, id) => {\r\n            return <Post data={post} key={id} />;\r\n          })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAO,aAAa;AACpB,SAASC,SAAS,QAAQ,kBAAkB;AAAC;AAE7C,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAMC,MAAM,GAAGF,SAAS,EAAE;EAC1B,MAAMG,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAM;IAAEK;EAAK,CAAC,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,WAAW,CAACC,QAAQ,CAAC;EACnE,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGX,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACK,WAAW,CAAC;EAClEf,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAACP,gBAAgB,CAACQ,IAAI,CAACO,GAAG,CAAC,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EACN,IAAG,CAACH,KAAK,EAAE,OAAO,UAAU;EAC5B,IAAGN,MAAM,CAACU,EAAE,EAAEJ,KAAK,GAAGA,KAAK,CAACK,MAAM,CAAEC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAGb,MAAM,CAACU,EAAE,CAAC;EACpE,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,UACnBH,OAAO,GACJ,oBAAoB,GACpBD,KAAK,CAACQ,GAAG,CAAC,CAACF,IAAI,EAAEF,EAAE,KAAK;MACtB,oBAAO,QAAC,IAAI;QAAC,IAAI,EAAEE;MAAK,GAAMF,EAAE;QAAA;QAAA;QAAA;MAAA,QAAI;IACtC,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAnBIX,KAAK;EAAA,QACMD,SAAS,EACPD,WAAW,EACXD,WAAW,EACHA,WAAW;AAAA;AAAA,KAJhCG,KAAK;AAqBX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}